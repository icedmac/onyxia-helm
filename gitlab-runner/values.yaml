cache:
  enabled: false
  endpoint: ""
  bucket: ""
  location: "eu-west-1"
  accessKey: ""
  secretKey: ""

certs:
  certificate: |
    -----BEGIN CERTIFICATE-----
    MIIDfzCCAmegAwIBAgIUOZmBFH3gvXF2ALt22ftSz9YKxDgwDQYJKoZIhvcNAQEL
    BQAwTzELMAkGA1UEBhMCRlIxDjAMBgNVBAgMBVBBUklTMQ4wDAYDVQQHDAVQQVJJ
    UzENMAsGA1UECgwETUVGUjERMA8GA1UECwwIQmVyY3lIdWIwHhcNMjIwODExMTU1
    NjMyWhcNMjcwODEwMTU1NjMyWjBPMQswCQYDVQQGEwJGUjEOMAwGA1UECAwFUEFS
    SVMxDjAMBgNVBAcMBVBBUklTMQ0wCwYDVQQKDARNRUZSMREwDwYDVQQLDAhCZXJj
    eUh1YjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKF997jgGRkU6D/x
    7QVpG0L+5Q2YZeaW+igFPBwcP2jHnLk/r7ttUxhtv+Y3oT9LXD+QfzhpyfjS+IUF
    XcTC92JALfCF8CYK4MWQV7RgrtS5c19AN8t030Yg/e/nY6PpkLYSv99wmYJKZeu1
    8xVuND5CjUTZP55W7PbWQn5Y2jKpcym7QAt1slLP+KGIeRgcOUvIsNDcmEGtGWXr
    5Q+Eylpz5z7OZwgvV53bTDChhpPq/Z0pEnknOgYiWkuJT946f4K5AJGR1izckJhx
    /Jnc2h0PyyGez0T5dqc806pcK2nsnnpMnG7fWJM5e+vWmJbsPXVZnXV5CjF3qIBR
    ieozUW0CAwEAAaNTMFEwHQYDVR0OBBYEFB6MdV8gYven5KoVb1iO6OMjmYUPMB8G
    A1UdIwQYMBaAFB6MdV8gYven5KoVb1iO6OMjmYUPMA8GA1UdEwEB/wQFMAMBAf8w
    DQYJKoZIhvcNAQELBQADggEBADrRGk8yxJrRDSVYN/UQEKaXrYC4GOwg1n14cda1
    ii72kIO98ks9NfhTJ/dZxSX6N/Wy/fd93EYm3K862ooYAJI54ALyE/Dv6Bf/8h6L
    gNTEQl4i09f0fjoG8p2dWzFDaS6MAylNZLFSb2KYI7JFwBrST+FyjoL7uyMz2mut
    Ngp7ACWhmf8nb1n5KiUUEhx47p8Lto40Y+9/TGKJw1oHRUny5uNricH9aKR2UPa/
    icYfKD9vt5X19bHGpGNs+/6CxtzV5mbZ1e80Jpb01sWW4UHwzyLm7pec11SpH7ro
    LZ2n7lF9uZ095twpyvX9apEJDDVhOO+L4npktCU+NNm5OHk=
    -----END CERTIFICATE-----

registration:
  gitlabUrl: "https://forge.dgfip.finances.rie.gouv.fr/"
  token: ""

authentification:
  gitlabUrl: "https://forge.dgfip.finances.rie.gouv.fr/"
  token: ""

imagePullSecrets: {}

runner:
  images:
    registry: harbor.nubonyxia
    version: v15.7.1
    runner: "library/gitlab/gitlab-runner-ocp"
    helper: "library/gitlab/gitlab-runner-helper-ocp"
  concurrent: 4
  checkInterval: 15
  tags: "kubernetes"

runners:
  maximumTimeout: "30"
  config: |
    [[runners]]
      url = "{{ .Values.registration.gitlabUrl }}"
      executor = "kubernetes"
      output_limit = 4096
      [runners.kubernetes]
        namespace = "{{ .Release.Namespace }}"
        image = "ubuntu:22.04"
        helper_image = "{{ .Values.runner.images.registry }}/{{ .Values.runner.images.helper }}:{{ .Values.runner.images.version }}"
        service_account = "{{ include "gitlab-runner.fullname" . }}"
        [runners.kubernetes.node_selector]
        {{- range $key, $val := .Values.nodeSelector }}
          {{ $key | quote }} = {{ $val | quote }}
        {{- end }}
        [runners.kubernetes.pod_security_context]
        [[runners.kubernetes.volumes.empty_dir]]
          name = "empty-dir"
          mount_path = "/tmp"
          medium = "Memory"
        [[runners.kubernetes.volumes.pvc]]
          name = "{{ include "gitlab-runner.fullname" . }}"
          mount_path = "/artifacts"
        [[runners.kubernetes.volumes.secret]]
          name = "{{ include "gitlab-runner.secret.certs" . }}"
          mount_path = "/etc/ssl/certs/CA.crt"
          sub_path = "certificate"
          read_only = true
        {{ if .Values.cache.enabled }}
        [runners.cache]
          Type = "s3"
          Path = "runner"
          Shared = true
          [runners.cache.s3]
            ServerAddress = "{{ .Values.cache.endpoint }}"
            BucketName = "{{ .Values.cache.bucket }}"
            BucketLocation = "{{ .Values.cache.location }}"
            AuthenticationType = "access-key"
        {{ end }}

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 5Gi
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  #storageClass: "-"

## Configure environment variables that will be present when the registration command runs
## This provides further control over the registration process and the config.toml file
## ref: `gitlab-runner register --help`
## ref: https://docs.gitlab.com/runner/configuration/advanced-configuration.html
##
# envVars:
#   - name: RUNNER_EXECUTOR
#     value: kubernetes

## list of hosts and IPs that will be injected into the pod's hosts file
hostAliases: []
  # Example:
  # - ip: "127.0.0.1"
  #   hostnames:
  #   - "foo.local"
  #   - "bar.local"
  # - ip: "10.1.2.3"
  #   hostnames:
  #   - "foo.remote"
  #   - "bar.remote"

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
  # Example: The gitlab runner manager should not run on spot instances so you can assign
  # them to the regular worker nodes only.
  # node-role.kubernetes.io/worker: "true"

## List of node taints to tolerate (requires Kubernetes >= 1.6)
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
  # Example: Regular worker nodes may have a taint, thus you need to tolerate the taint
  # when you assign the gitlab runner manager with nodeSelector or affinity to the nodes.
  # - key: "node-role.kubernetes.io/worker"
  #   operator: "Exists"